
// {type:sequence}
// {generate:true}


[:Command]
[:Service]
[:TransferEngine]
[:ERC20Access]
[:IERC20]
[:nativebridge]
[:ethclient]
[:fclient]
[:Command]>[note: tokenkey, bridgekey, ERC20Address, NativeProxyAddress, BridgeAddress, Banks{bg:cornsilk}]

[:Command]Dial(LocalChainRPC)>[:ethclient]
[:ethclient]lclient .>[:Command]
[:Command]Dial(ForeignChainRPC)>[:ethclient]
[:ethclient]fclient .>[:Command]

[:Command]NewNativeProxy(NativeProxyAddress, lclient)>[:nativeproxy]
[:nativeproxy]proxy.>[:Command]

[:Command]NewRemoteBridge(BridgeAddress, lclient)>[:remotebridge]
[:nativeproxy]bridge.>[:Command]

[:Command]NewERC20(ERC20Address)(fclient)>[:IERC20]
[:IERC20]erc.>[:Command]

[:Command]NewTransferERC20Transactor(fclient, cERC20Address)>[:nativetotoken]
[:nativetotoken]erctransfer.>[:Command]

[:Command]NewNativeBridge(BridgeAddress, lclient)>[:nativebridge]
[:nativebridge]nativebridge.>[:Command]




[:Command]NewTransferEngine(lclient, fclinet, tokenkey, bridgekey, bridge, erc, ercTransfer)>[:nativetotoken]
[:TransferEngine]engine.>[:Command]

[:Command]NewNativeTransferAccess(proxy)>[:nativetotoken]
[:ERC20Access]transfers interface.>[:Command]


[:Command]NewService(fclient, engine, blocks, transfers, banks)>[:Service]
[:Service]service .>[:Command]
[:Command]Run()>[:Service]
[:Service]run()>[:Service]
[:Service]getRange()>[:Service]

[:Service]Transfers()>[:nativetotoken]
[:nativetotoken]FilterTransfer>[:nativeproxy]
[:nativeproxy] Filtered Transfers.>[:nativetotoken]
[:nativetotoken]transfers.>[:Service]

[:Service]Execute(transfers)>[:TransferEngine]
[:TransferEngine]TransactionByHash>[:fclinet]
[:fclinet].>[:TransferEngine]
[:TransferEngine]SendTransaction>[:fclinet]
[:fclinet].>[:TransferEngine]
[:TransferEngine]>[:Command]